# Generated by Django 5.2.4 on 2025-08-07 23:25

import wagtail.fields
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0021_cloudinarywagtailimage_blogpostpagegalleryimage_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='blogpostpage',
            name='legacy_content',
            field=wagtail.fields.RichTextField(blank=True, help_text='Legacy content field - will be migrated to new format', null=True),
        ),
        migrations.AddField(
            model_name='blogpostpage',
            name='stream_content',
            field=wagtail.fields.StreamField([('rich_text', 0), ('image', 5), ('heading', 8), ('quote', 11), ('code', 15), ('callout', 19), ('embed', 20)], blank=True, block_lookup={0: ('blog.blocks.RichTextBlock', (), {}), 1: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': True}), 2: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional image caption', 'max_length': 255, 'required': False}), 3: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('left', 'Align Left'), ('center', 'Center'), ('right', 'Align Right'), ('full', 'Full Width')], 'help_text': 'How to align the image'}), 4: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('small', 'Small (300px)'), ('medium', 'Medium (500px)'), ('large', 'Large (700px)'), ('full', 'Full Width')], 'help_text': 'Image display size'}), 5: ('wagtail.blocks.StructBlock', [[('image', 1), ('caption', 2), ('alignment', 3), ('size', 4)]], {}), 6: ('wagtail.blocks.CharBlock', (), {'max_length': 255, 'required': True}), 7: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'H2 - Large'), ('h3', 'H3 - Medium'), ('h4', 'H4 - Small'), ('h5', 'H5 - Extra Small')]}), 8: ('wagtail.blocks.StructBlock', [[('heading_text', 6), ('size', 7)]], {}), 9: ('wagtail.blocks.TextBlock', (), {'help_text': 'The quote text', 'required': True}), 10: ('wagtail.blocks.CharBlock', (), {'help_text': 'Quote author or source', 'max_length': 100, 'required': False}), 11: ('wagtail.blocks.StructBlock', [[('quote', 9), ('attribution', 10)]], {}), 12: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('python', 'Python'), ('javascript', 'JavaScript'), ('html', 'HTML'), ('css', 'CSS'), ('bash', 'Bash/Shell'), ('sql', 'SQL'), ('json', 'JSON'), ('yaml', 'YAML'), ('markdown', 'Markdown'), ('text', 'Plain Text')], 'help_text': 'Programming language for syntax highlighting'}), 13: ('wagtail.blocks.TextBlock', (), {'help_text': 'Your code', 'required': True}), 14: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional code description', 'max_length': 255, 'required': False}), 15: ('wagtail.blocks.StructBlock', [[('language', 12), ('code', 13), ('caption', 14)]], {}), 16: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('info', 'Info (Blue)'), ('success', 'Success (Green)'), ('warning', 'Warning (Yellow)'), ('danger', 'Danger (Red)')]}), 17: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional callout title', 'max_length': 100, 'required': False}), 18: ('wagtail.blocks.RichTextBlock', (), {'help_text': 'Callout content', 'required': True}), 19: ('wagtail.blocks.StructBlock', [[('type', 16), ('title', 17), ('content', 18)]], {}), 20: ('wagtail.embeds.blocks.EmbedBlock', (), {'help_text': 'Embed videos, tweets, etc.'})}, help_text='New content format with inline images', null=True),
        ),
    ]
